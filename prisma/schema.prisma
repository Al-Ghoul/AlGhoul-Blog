// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  is_admin      Boolean   @default(false)

  accounts Account[]
  authors  Author[]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index(userId)
}

model Author {
  id              Int    @id @default(autoincrement())
  name            String @unique
  profileImageURL String
  bio             String @db.Text

  posts Post[]

  language   Language @relation(fields: [languageId], references: [id])
  languageId Int

  User   User   @relation(fields: [userId], references: [id])
  userId String

  @@index([languageId])
  @@index([userId])
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.Text
  date      DateTime @default(now())
  published Boolean

  author   Author @relation(fields: [authorId], references: [id])
  authorId Int

  language   Language @relation(fields: [languageId], references: [id])
  languageId Int

  tags Tag[]

  topic   Topic @relation(fields: [topicId], references: [id])
  topicId Int

  @@unique([title, languageId])
  @@index([authorId])
  @@index([languageId])
  @@index([topicId])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String
  icon String

  language   Language @relation(fields: [languageId], references: [id])
  languageId Int

  posts Post[]

  @@unique([name, languageId])
  @@index([languageId])
}

model Language {
  id   Int    @id @default(autoincrement())
  code String
  name String

  posts            Post[]
  tags             Tag[]
  topicTranslation Topic_Language_Translation[]
  authors          Author[]

  @@unique([code, name])
}

model Topic {
  id  Int    @id @default(autoincrement())
  tag String @unique

  posts            Post[]
  topicTranslation Topic_Language_Translation[]
}

model Topic_Language_Translation {
  topic       Topic    @relation(fields: [topicId], references: [id])
  topicId     Int
  language    Language @relation(fields: [languageId], references: [id])
  languageId  Int
  translation String

  @@id([topicId, languageId])
  @@index([topicId])
  @@index([languageId])
}
